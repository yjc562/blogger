name: Enhanced Blog Automation

on:
  schedule:
    # 매일 오후 1시 (한국시간) - 하루에 한 번만 실행
    - cron: '0 4 * * *'   # 오후 1:00 KST = UTC 04:00
  workflow_dispatch: # 수동 실행
    inputs:
      topic:
        description: 'Blog post topic (optional)'
        required: false
        type: string
      labels:
        description: 'Post labels (comma-separated)'
        required: false
        type: string
        default: 'AI,블로그'

permissions:
  contents: write

jobs:
  auto-blog-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache Python packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-api-python-client google-auth-oauthlib google-generativeai
        
    - name: Create config file
      run: |
        cat > config.ini << EOF
        [GOOGLE]
        client_id = ${{ secrets.GOOGLE_CLIENT_ID }}
        client_secret = ${{ secrets.GOOGLE_CLIENT_SECRET }}
        blog_id = ${{ secrets.BLOGGER_BLOG_ID }}
        scopes = https://www.googleapis.com/auth/blogger
        
        [AI]
        gemini_api_key = ${{ secrets.GEMINI_API_KEY }}
        model = gemini-pro
        max_tokens = 2000
        
        [CONTENT]
        default_labels = AI,블로그,GitHub
        post_format = html
        language = ko
        
        [AUTOMATION]
        topics_file = topics.json
        post_history = post_history.json
        max_posts_per_day = 3
        EOF
        
    - name: Create token file from secrets
      run: |
        echo '${{ secrets.BLOGGER_TOKEN_JSON }}' > blogger_token.json
        
    - name: Run automated blog posting
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        BLOGGER_BLOG_ID: ${{ secrets.BLOGGER_BLOG_ID }}
      run: |
        if [[ -n "${{ github.event.inputs.topic }}" ]]; then
          python cn_enhanced_blog_automation.py --topic "${{ github.event.inputs.topic }}" --labels "${{ github.event.inputs.labels }}"
        else
          python cn_enhanced_blog_automation.py --auto
        fi
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: blog-automation-logs
        path: |
          blog_automation.log
          post_history.json
        retention-days: 30
        
    - name: Commit updated history
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        if [[ -f post_history.json ]]; then
          git add post_history.json
          git diff --staged --quiet || git commit -m "Update post history - $(date +'%Y-%m-%d %H:%M')"
          git push
        fi

  notify-status:
    needs: auto-blog-post
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.auto-blog-post.result == 'success'
      run: |
        echo "✅ Blog automation completed successfully"
        echo "Check your blog for the new post!"
        
    - name: Notify failure
      if: needs.auto-blog-post.result == 'failure'
      run: |
        echo "❌ Blog automation failed"
        echo "Please check the logs for details"
